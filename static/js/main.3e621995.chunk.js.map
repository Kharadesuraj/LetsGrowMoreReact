{"version":3,"sources":["Components/Cards.js","App.js","reportWebVitals.js","index.js"],"names":["Cards","props","userData","map","user","index","className","src","avatar","alt","first_name","last_name","email","href","class","App","React","useState","isDateLoaded","setIsDateLoaded","setUserData","isButtonClicked","setisButtonClicked","id","rel","onClick","fetch","then","response","json","res","data","setInterval","catch","err","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAEe,SAASA,EAAMC,GAC1B,OACI,mCACCA,EAAMC,SAASC,KAAI,SAACC,EAAKC,GACtB,OAEI,qBAAKC,UAAU,UAAf,SACI,qBAAKA,UAAU,SAAf,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKC,IAAKH,EAAKI,OAAQC,IAAI,MAC3B,sBAAKH,UAAU,UAAf,UACI,+BACI,+BAAOF,EAAKM,aACXN,EAAKO,aAEd,4BAAIP,EAAKQ,QACT,qBAAKN,UAAU,OAAf,SACI,mBAAGO,KAAK,YAAYC,MAAM,YAA1B,yCCoCjBC,MAhDf,WACE,MAAuCC,IAAMC,UAAS,GAAtD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA+BH,IAAMC,SAAS,IAA9C,mBAAOf,EAAP,KAAgBkB,EAAhB,KACA,EAA6CJ,IAAMC,UAAS,GAA5D,mBAAOI,EAAP,KAAuBC,EAAvB,KAYA,OACE,mCACE,cAAC,IAAD,UACE,0BAAShB,UAAU,YAAnB,UACE,sBAAKA,UAAU,MAAMiB,GAAG,QAAxB,UACE,mBAAGC,IAAI,aAAaX,KAAK,GAAGC,MAAM,SAAlC,2BAGA,mBAAGD,KAAK,WAAWC,MAAM,MAAMW,QAnBrB,WAClBH,GAAmB,GACnBI,MAAM,sCAAsCC,MAAK,SAACC,GAAD,OAAYA,EAASC,UAAQF,MAAK,SAACG,GAAOV,EAAYU,EAAIC,MAC3GC,aAAY,WACVb,GAAgB,KAChB,SAEHc,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAWJ,0BAIF,qBAAK5B,UAAU,aAAf,SACE,qBAAKA,UAAU,6BAAf,SACGe,EACCH,EACE,cAAClB,EAAD,CAAOE,SAAUA,IAEjB,qBAAKI,UAAU,WAGjB,qBAAKA,UAAU,QAAf,SACE,4HChCH+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3e621995.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\nexport default function Cards(props){\r\n    return(\r\n        <>\r\n        {props.userData.map((user,index)=>{\r\n            return(\r\n\r\n                <div className=\"content\">\r\n                    <div className=\"column\">\r\n                        <div className=\"img1\">\r\n                            <img src={user.avatar} alt=\"/\" />\r\n                            <div className=\"details\">\r\n                                <h2>\r\n                                    <span>{user.first_name}</span>\r\n                                    {user.last_name}\r\n                                </h2>\r\n                            <p>{user.email}</p>\r\n                            <div className=\"more\">\r\n                                <a href=\"#services\" class=\"read-more\">\r\n                                    learn more\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            );\r\n        })}\r\n\r\n        </>\r\n    );\r\n}","import './App.css';\nimport React from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport Cards from './Components/Cards';\n\n\n\nfunction App() {\n  const [isDateLoaded,setIsDateLoaded] = React.useState(false);\n  const [userData,setUserData] = React.useState([]);\n  const [isButtonClicked,setisButtonClicked] = React.useState(false);\n  const handleClicked=()=>{\n    setisButtonClicked(true);\n    fetch(\"https://reqres.in/api/users?page=1\").then((response)=>response.json()).then((res)=>{setUserData(res.data);\n    setInterval(()=>{\n      setIsDateLoaded(true);\n    },1700);\n  })\n  .catch((err)=>{\n    console.log(err);\n  }); \n  };\n  return (\n    <>\n      <Router>\n        <section className=\"container\">\n          <div className=\"nav\" id=\"mynav\">\n            <a rel=\"noreferrer\" href=\"\" class=\"active\">\n              Lets'GrowMore\n            </a>\n            <a href=\"#getuser\" class=\"btn\" onClick={handleClicked}>\n              User Data\n            </a>\n          </div>\n          <div className=\"container1\">\n            <div className=\"row justify-content-center\">\n              {isButtonClicked?(\n                isDateLoaded?(\n                  <Cards userData={userData}/>\n                ):(\n                  <div className=\"loader\"></div>\n                )\n              ):(\n                <div className=\"intro\">\n                  <p>Welcome To Let'sGrowMore Virtual Web-Development Internship September #TASK 2</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </section>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}